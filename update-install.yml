- hosts: all
  become: yes
  gather_facts: no
  vars:
    create_containers: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1dvars
    custom_ssh_port: 1834
  tasks:
  - name: "Updating via apt"
    apt:
      upgrade: yes
      update_cache: true
  
  - name: "Installing curl via apt"
    apt:
      name: curl
      state: present

  - name: "Installing UFW via apt"
    apt:
      name: ufw
      state: present
      
  - name: "Turning on UFW"
    ufw:
      state: enabled
      policy: allow
      
  - name: "Openning port 80"
    ufw:
      rule: allow
      port: '80'
      proto: tcp
      
  - name: "Openning port 8080"
    ufw:
      rule: allow
      port: '8080'
      proto: tcp
      
  - name: "Openning port 1834"
    ufw:
      rule: allow
      port: '1834'
      proto: tcp
      
  - name: "Installing aptitude via apt"
    apt: 
      name: aptitude
      state: present
      update_cache: yes
    
  - name: "Installing required system packeges"
    apt:
      name: 
        - gpg 
        - apt-transport-https 
        - ca-certificates 
        - software-properties-common 
        - python3 
        - python3-pip 
        - virtualenv 
        - python3-setuptools
      state: present
      update_cache: yes
    
  - name: "Adding gpg key for docker"
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
       
  - name: "Add repos"
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu bionic stable
      state: present
      
  - name: "Installing docker-ce"
    apt: 
      name: docker-ce
      state: latest
      update_cache: yes
      
  - name: "Installing python modules"
    pip:
      name: docker
      
  - name: "Downloading suurce from Jeniston14's git"
    git:
      repo: https://github.com/Jeniston14/wsr-skillcloud.git
      dest: /skillcloud-nginx
      clone: yes
      update: yes
      
  - name: "Installing docker-compose via Jeniston14's script"
    shell: 'sh /skillcloud-nginx/docker-compose.sh'
    
  - name: "Configuring ssh keys"
    shell: 'echo PubKeyAuthentication yes >> /etc/ssh/sshd_config '
    
  - name: "Configuring ssh port"
    shell: 'echo Port 1834 >> /etc/ssh/sshd_config ' 
  - name: "Restarting ssh"
    shell: 'systemctl restart ssh'
    
  - name: "Restarting ufw"
    shell: 'systemctl restart ufw'
    
  - name: "Rebooting hosts"
    reboot: 
      msg: "Rebooting from ansible"
      connect_timeout: 10
      reboot_timeout: 600
      pre_reboot_delay: 0
      post_reboot_delay: 330
      test_command: whoami
      
  - name: "Test default ssh port"
    local_action: wait_for port=22 timeout=5 host=192.168.1.100
    register: default_ssh
    ignore_errors: true
    
  - name: set ansible_ssh_port to default
    set_fact: ansible_ssh_port=22
    when: default_ssh.elapsed < 5
  
  - name: test ssh on high port
    local_action: wait_for port=1834 timeout=5 host=192.168.1.100
    register: high_ssh
    when: default_ssh.elapsed >= 5
    ignore_errors: true
  
  - name: set ansible_ssh_port high
    set_fact: ansible_ssh_port=1834
    when: default_ssh.elapsed >= 5 and high_ssh.elapsed < 5
      
  - name: "Test default ssh port"
    local_action: wait_for port=22 timeout=5 host=192.168.1.101
    register: default_ssh
    ignore_errors: true
      
  - name: set ansible_ssh_port to default
    set_fact: ansible_ssh_port=22
    when: default_ssh.elapsed < 5
    
  - name: test ssh on high port
    local_action: wait_for port=1834 timeout=5 host=192.168.1.101
    register: high_ssh
    when: default_ssh.elapsed >= 5
    ignore_errors: true
  
  - name: set ansible_ssh_port high
    set_fact: ansible_ssh_port=1834
    when: default_ssh.elapsed >= 5 and high_ssh.elapsed < 5
      
  - name: "Test default ssh port"
    local_action: wait_for port=22 timeout=5 host=192.168.1.102
    register: default_ssh
    ignore_errors: true
     
  - name: set ansible_ssh_port to default
    set_fact: ansible_ssh_port=22
    when: default_ssh.elapsed < 5
      
  - name: test ssh on high port
    local_action: wait_for port=1834 timeout=5 host=192.168.1.102
    register: high_ssh
    when: default_ssh.elapsed >= 5
    ignore_errors: true
      
  - name: set ansible_ssh_port high
    set_fact: ansible_ssh_port=1834
    when: default_ssh.elapsed >= 5 and high_ssh.elapsed < 5
